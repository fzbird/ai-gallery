"""empty message

Revision ID: 994859614df4
Revises: 
Create Date: 2025-07-09 22:11:27.877276

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '994859614df4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('category_ibfk_1'), 'category', type_='foreignkey')
    op.create_foreign_key(None, 'category', 'category', ['parent_id'], ['id'])
    op.drop_constraint(op.f('comment_ibfk_2'), 'comment', type_='foreignkey')
    op.drop_constraint(op.f('comment_ibfk_1'), 'comment', type_='foreignkey')
    op.create_foreign_key(None, 'comment', 'user', ['owner_id'], ['id'])
    op.create_foreign_key(None, 'comment', 'content', ['content_id'], ['id'])
    op.drop_constraint(op.f('content_ibfk_3'), 'content', type_='foreignkey')
    op.drop_constraint(op.f('content_ibfk_1'), 'content', type_='foreignkey')
    op.drop_constraint(op.f('content_ibfk_2'), 'content', type_='foreignkey')
    op.create_foreign_key(None, 'content', 'category', ['category_id'], ['id'])
    op.create_foreign_key(None, 'content', 'user', ['owner_id'], ['id'])
    op.create_foreign_key(None, 'content', 'topic', ['topic_id'], ['id'])
    op.drop_constraint(op.f('content_bookmarks_ibfk_1'), 'content_bookmarks', type_='foreignkey')
    op.drop_constraint(op.f('content_bookmarks_ibfk_2'), 'content_bookmarks', type_='foreignkey')
    op.create_foreign_key(None, 'content_bookmarks', 'user', ['user_id'], ['id'])
    op.create_foreign_key(None, 'content_bookmarks', 'content', ['content_id'], ['id'])
    op.drop_constraint(op.f('content_likes_ibfk_1'), 'content_likes', type_='foreignkey')
    op.drop_constraint(op.f('content_likes_ibfk_2'), 'content_likes', type_='foreignkey')
    op.create_foreign_key(None, 'content_likes', 'content', ['content_id'], ['id'])
    op.create_foreign_key(None, 'content_likes', 'user', ['user_id'], ['id'])
    op.drop_constraint(op.f('content_tags_ibfk_1'), 'content_tags', type_='foreignkey')
    op.drop_constraint(op.f('content_tags_ibfk_2'), 'content_tags', type_='foreignkey')
    op.create_foreign_key(None, 'content_tags', 'content', ['content_id'], ['id'])
    op.create_foreign_key(None, 'content_tags', 'tag', ['tag_id'], ['id'])
    op.drop_constraint(op.f('followers_ibfk_2'), 'followers', type_='foreignkey')
    op.drop_constraint(op.f('followers_ibfk_1'), 'followers', type_='foreignkey')
    op.create_foreign_key(None, 'followers', 'user', ['follower_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'followers', 'user', ['followed_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('gallery_ibfk_2'), 'gallery', type_='foreignkey')
    op.drop_constraint(op.f('gallery_ibfk_1'), 'gallery', type_='foreignkey')
    op.create_foreign_key(None, 'gallery', 'content', ['id'], ['id'])
    op.create_foreign_key(None, 'gallery', 'image', ['cover_image_id'], ['id'])
    op.drop_constraint(op.f('image_ibfk_1'), 'image', type_='foreignkey')
    op.drop_constraint(op.f('image_ibfk_2'), 'image', type_='foreignkey')
    op.create_foreign_key(None, 'image', 'gallery', ['gallery_id'], ['id'])
    op.create_foreign_key(None, 'image', 'content', ['id'], ['id'])
    op.drop_constraint(op.f('topic_ibfk_1'), 'topic', type_='foreignkey')
    op.create_foreign_key(None, 'topic', 'image', ['cover_image_id'], ['id'])
    op.drop_constraint(op.f('user_ibfk_1'), 'user', type_='foreignkey')
    op.create_foreign_key(None, 'user', 'department', ['department_id'], ['id'])
    op.drop_constraint(op.f('user_follows_ibfk_2'), 'user_follows', type_='foreignkey')
    op.drop_constraint(op.f('user_follows_ibfk_1'), 'user_follows', type_='foreignkey')
    op.create_foreign_key(None, 'user_follows', 'user', ['followed_id'], ['id'])
    op.create_foreign_key(None, 'user_follows', 'user', ['follower_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_follows', type_='foreignkey')
    op.drop_constraint(None, 'user_follows', type_='foreignkey')
    op.create_foreign_key(op.f('user_follows_ibfk_1'), 'user_follows', 'user', ['followed_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.create_foreign_key(op.f('user_follows_ibfk_2'), 'user_follows', 'user', ['follower_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.create_foreign_key(op.f('user_ibfk_1'), 'user', 'department', ['department_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_constraint(None, 'topic', type_='foreignkey')
    op.create_foreign_key(op.f('topic_ibfk_1'), 'topic', 'image', ['cover_image_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_constraint(None, 'image', type_='foreignkey')
    op.drop_constraint(None, 'image', type_='foreignkey')
    op.create_foreign_key(op.f('image_ibfk_2'), 'image', 'content', ['id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.create_foreign_key(op.f('image_ibfk_1'), 'image', 'gallery', ['gallery_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_constraint(None, 'gallery', type_='foreignkey')
    op.drop_constraint(None, 'gallery', type_='foreignkey')
    op.create_foreign_key(op.f('gallery_ibfk_1'), 'gallery', 'content', ['id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.create_foreign_key(op.f('gallery_ibfk_2'), 'gallery', 'image', ['cover_image_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_constraint(None, 'followers', type_='foreignkey')
    op.drop_constraint(None, 'followers', type_='foreignkey')
    op.create_foreign_key(op.f('followers_ibfk_1'), 'followers', 'user', ['followed_id'], ['id'], onupdate='RESTRICT', ondelete='CASCADE')
    op.create_foreign_key(op.f('followers_ibfk_2'), 'followers', 'user', ['follower_id'], ['id'], onupdate='RESTRICT', ondelete='CASCADE')
    op.drop_constraint(None, 'content_tags', type_='foreignkey')
    op.drop_constraint(None, 'content_tags', type_='foreignkey')
    op.create_foreign_key(op.f('content_tags_ibfk_2'), 'content_tags', 'tag', ['tag_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.create_foreign_key(op.f('content_tags_ibfk_1'), 'content_tags', 'content', ['content_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_constraint(None, 'content_likes', type_='foreignkey')
    op.drop_constraint(None, 'content_likes', type_='foreignkey')
    op.create_foreign_key(op.f('content_likes_ibfk_2'), 'content_likes', 'user', ['user_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.create_foreign_key(op.f('content_likes_ibfk_1'), 'content_likes', 'content', ['content_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_constraint(None, 'content_bookmarks', type_='foreignkey')
    op.drop_constraint(None, 'content_bookmarks', type_='foreignkey')
    op.create_foreign_key(op.f('content_bookmarks_ibfk_2'), 'content_bookmarks', 'user', ['user_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.create_foreign_key(op.f('content_bookmarks_ibfk_1'), 'content_bookmarks', 'content', ['content_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_constraint(None, 'content', type_='foreignkey')
    op.drop_constraint(None, 'content', type_='foreignkey')
    op.drop_constraint(None, 'content', type_='foreignkey')
    op.create_foreign_key(op.f('content_ibfk_2'), 'content', 'user', ['owner_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.create_foreign_key(op.f('content_ibfk_1'), 'content', 'category', ['category_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.create_foreign_key(op.f('content_ibfk_3'), 'content', 'topic', ['topic_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_constraint(None, 'comment', type_='foreignkey')
    op.drop_constraint(None, 'comment', type_='foreignkey')
    op.create_foreign_key(op.f('comment_ibfk_1'), 'comment', 'content', ['content_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.create_foreign_key(op.f('comment_ibfk_2'), 'comment', 'user', ['owner_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_constraint(None, 'category', type_='foreignkey')
    op.create_foreign_key(op.f('category_ibfk_1'), 'category', 'category', ['parent_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    # ### end Alembic commands ###
